{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Proyecto_Ciclo 4\\\\empleado_front\\\\src\\\\components\\\\grid\\\\grid.js\";\nimport React from \"react\";\nimport \"../empleados/empleados.css\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, PaginationListStandalone, SizePerPageDropdownStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport { request } from \"../helper/helper\";\nimport Loading from \"../loading/loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { isUndefined } from \"util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  SearchBar\n} = Search;\nexport default class DataGrid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Loading: false,\n      rows: []\n    };\n\n    if (this.props.showEditButton && !this.existsColumn(\"Editar\")) {\n      this.props.columns.push(this.getEditButton());\n    }\n\n    if (this.props.showDeleteButton && !this.existsColumn(\"Eliminar\")) {\n      this.props.columns.push(this.getDeleteButton());\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    this.setState({\n      loading: false\n    });\n    request.get(this.props.url).then(response => {\n      this.setState({\n        rows: response.data,\n        Loading: false\n      });\n    }).catch(err => {\n      console.error(err);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  existsColumn(colText) {\n    let col = this.props.columns.find(column => column.text === colText);\n    return !isUndefined(col);\n  }\n\n  getEditButton() {\n    return {\n      text: \"Editar\",\n      formatter: (cell, row) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.props.onClickEditButton(row),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      }\n    };\n  }\n\n  getDeleteButton() {\n    return {\n      text: \"Eliminar\",\n      formatter: (cell, row) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.props.onClickDeleteButton(row),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    const options = {\n      custom: true,\n      totalSize: this.state.rows.length\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Loading, {\n        show: this.state.Loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n        keyField: \"tp\",\n        data: this.state.rows,\n        columns: this.props.columns,\n        search: true,\n        children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PaginationProvider, {\n            pagination: paginationFactory(options),\n            children: _ref => {\n              let {\n                paginationProps,\n                paginationTableProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(SizePerPageDropdownStandalone, { ...paginationProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                  keyField: \"bt\",\n                  data: this.state.rows,\n                  columns: this.props.columns,\n                  ...paginationTableProps,\n                  ...props.baseProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(PaginationListStandalone, { ...paginationProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/Proyecto_Ciclo 4/empleado_front/src/components/grid/grid.js"],"names":["React","Row","Col","Button","BootstrapTable","paginationFactory","PaginationProvider","PaginationListStandalone","SizePerPageDropdownStandalone","ToolkitProvider","Search","request","Loading","FontAwesomeIcon","faEdit","faTrash","isUndefined","SearchBar","DataGrid","Component","constructor","props","state","rows","showEditButton","existsColumn","columns","push","getEditButton","showDeleteButton","getDeleteButton","componentDidMount","getData","setState","loading","get","url","then","response","data","catch","err","console","error","colText","col","find","column","text","formatter","cell","row","onClickEditButton","onClickDeleteButton","render","options","custom","totalSize","length","paginationProps","paginationTableProps","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../empleados/empleados.css\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory, { PaginationProvider, \n    PaginationListStandalone, SizePerPageDropdownStandalone } from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport { request } from \"../helper/helper\";\nimport Loading from \"../loading/loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit,faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { isUndefined } from \"util\";\n\nconst { SearchBar } = Search;\n\nexport default class DataGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            Loading: false,\n            rows: [],\n        };\n        if(this.props.showEditButton && !this.existsColumn(\"Editar\")){\n            this.props.columns.push(this.getEditButton());\n        } \n        if(this.props.showDeleteButton && !this.existsColumn(\"Eliminar\")){\n            this.props.columns.push(this.getDeleteButton());\n        }\n    }\n    componentDidMount(){\n        this.getData();\n    }\n    getData(){\n        this.setState({ loading:false });\n        request\n        .get(this.props.url)\n        .then((response)=>{\n            this.setState({ \n                rows: response.data, \n                Loading:false,\n            });\n        })\n        .catch((err)=>{\n            console.error(err);\n            this.setState({ loading:false });\n        });\n    }\n    existsColumn(colText){\n        let col = this.props.columns.find((column)=> column.text === colText);\n        return !isUndefined(col);\n    }\n    getEditButton(){\n        return {\n            text:\"Editar\",\n            formatter: (cell, row)=>{\n                return(\n                    <Button onClick={()=> this.props.onClickEditButton(row)}>\n                        <FontAwesomeIcon icon={faEdit}/>\n                    </Button>\n                );\n            },\n        };\n    }\n\n    getDeleteButton(){\n        return{\n            text: \"Eliminar\",\n            formatter: (cell, row)=>{\n                return(\n                    <Button onClick={()=> this.props.onClickDeleteButton(row)}>\n                        <FontAwesomeIcon icon={ faTrash }/>\n                    </Button>\n                );\n            }\n        };\n    }\n\n    render() { \n        const options = {\n            custom: true,\n            totalSize: this.state.rows.length\n            };\n        return (\n            <>\n            <Loading show={ this.state.Loading }/>\n            <ToolkitProvider\n                    keyField=\"tp\"\n                    data={ this.state.rows }\n                    columns={ this.props.columns }\n                    search\n                    >\n                    {\n                        props => (\n                        <>\n                            <hr />\n                            <PaginationProvider\n                            pagination={ paginationFactory(options) }\n                            >\n                            {\n                                ({\n                                paginationProps,\n                                paginationTableProps\n                                }) => (\n                                <>\n                                    <Row>\n                                        <Col>\n                                            <SizePerPageDropdownStandalone { ...paginationProps } />\n                                        </Col>\n                                        <Col>\n                                            <SearchBar { ...props.searchProps } />\n                                        </Col>\n                                    </Row>\n                                    <BootstrapTable\n                                    keyField=\"bt\"\n                                    data={ this.state.rows }\n                                    columns={ this.props.columns }\n                                    { ...paginationTableProps }\n                                    { ...props.baseProps }\n                                    />\n                                    <PaginationListStandalone { ...paginationProps } />\n                                </>\n                                )\n                            }\n                            </PaginationProvider>\n                        </>\n                        )\n                    }\n                    </ToolkitProvider>\n                </>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}